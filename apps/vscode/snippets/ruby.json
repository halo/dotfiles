{
  "class end ðŸ“™": {
    "prefix": [
      "cla"
    ],
    "body": [
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}",
      "  $0",
      "end"
    ]
  },
  "class ðŸ“™": {
    "prefix": [
      "cla"
    ],
    "body": [
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$0"
    ]
  },
  "module end ðŸ“™": {
    "prefix": [
      "mod"
    ],
    "body": [
      "module ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}",
      "  $0",
      "end"
    ]
  },
  "module ðŸ“™": {
    "prefix": [
      "mod"
    ],
    "body": [
      "module ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$0"
    ]
  },
  "private ðŸ“™": {
    "prefix": [
      "p"
    ],
    "body": [
      "private",
      "",
      "$0"
    ]
  },
  "instance variable assignment ðŸ“™": {
    "prefix": [
      "var"
    ],
    "body": [
      "@${1:variable} = ${1:variable}"
    ]
  },
  "Read accessor ðŸ“™": {
    "prefix": [
      "r"
    ],
    "body": [
      "attr_reader :$0"
    ]
  },
  "Write accessor ðŸ“™": {
    "prefix": [
      "w"
    ],
    "body": [
      "attr_writer :$0"
    ]
  },
  "Read-Write accessor ðŸ“™": {
    "prefix": [
      "rw"
    ],
    "body": [
      "attr_accessor :$0"
    ]
  },
  "RSpec require and describe ðŸ“™": {
    "prefix": [
      "reqr"
    ],
    "body": [
      "require 'rails_helper'",
      "",
      "RSpec.describe ${TM_DIRECTORY/.+\\/spec\\/[^\\/]+\\/(.*)\\/*(.*)\\/*(.*)/${1:/pascalcase}${2:/pascalcase}/g}::${TM_FILENAME_BASE/(.*)_spec/${1:/pascalcase}/g} do",
      "  $0",
      "end"
    ]
  },
  "RSpec describe ðŸ“™": {
    "prefix": [
      "des"
    ],
    "body": [
      "describe '$1' do",
      "  $0",
      "end"
    ]
  },
  "RSpec context ðŸ“™": {
    "prefix": [
      "con"
    ],
    "body": [
      "context '$1' do",
      "  $0",
      "end"
    ]
  },
  "RSpec it ðŸ“™": {
    "prefix": [
      "it"
    ],
    "body": [
      "it '$1' do",
      "  $0",
      "end"
    ]
  },
  "RSpec expect ðŸ“™": {
    "prefix": [
      "exp"
    ],
    "body": [
      "expect($1).to "
    ]
  },
  "RSpec expect inline block ðŸ“™": {
    "prefix": [
      "exp"
    ],
    "body": [
      "expect { $1 }.to "
    ]
  },
  "RSpec expect block ðŸ“™": {
    "prefix": [
      "exp"
    ],
    "body": [
      "expect do",
      "  $1",
      "end.to $0",
    ]
  },
  "described_class ðŸ“™": {
    "prefix": [
      "dc"
    ],
    "body": [
      "described_class"
    ]
  },
  "RSpec be_instance_of ðŸ“™": {
    "prefix": [
      "bi"
    ],
    "body": [
      "be_instance_of "
    ]
  }
}
