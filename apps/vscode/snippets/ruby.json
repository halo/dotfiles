{
  "class end": {
    "prefix": [
      "class"
    ],
    "body": [
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}",
      "  $0",
      "end"
    ]
  },
  "class": {
    "prefix": [
      "cla"
    ],
    "body": [
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$0"
    ]
  },
  "module": {
    "prefix": [
      "module"
    ],
    "body": [
      "module ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}",
      "  $0",
      "end"
    ]
  },
  "module": {
    "prefix": [
      "mod"
    ],
    "body": [
      "module ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$0"
    ]
  },
  "private": {
    "prefix": [
      "p"
    ],
    "body": [
      "private",
      "",
      "$0"
    ]
  },
  "instance variable assignment": {
    "prefix": [
      "var"
    ],
    "body": [
      "@${1:variable} = ${1:variable}"
    ]
  },
  "Read accessor": {
    "prefix": [
      "r"
    ],
    "body": [
      "attr_reader :$0"
    ]
  },
  "Write accessor": {
    "prefix": [
      "w"
    ],
    "body": [
      "attr_writer :$0"
    ]
  },
  "Read-Write accessor": {
    "prefix": [
      "rw"
    ],
    "body": [
      "attr_accessor :$0"
    ]
  },
  "RSpec require and describe": {
    "prefix": [
      "reqr"
    ],
    "body": [
      "require 'rails_helper'",
      "",
      "RSpec.describe ${TM_DIRECTORY/.+\\/spec\\/[^\\/]+\\/(.*)\\/*(.*)\\/*(.*)/${1:/pascalcase}${2:/pascalcase}/g}::${TM_FILENAME_BASE/(.*)_spec/${1:/pascalcase}/g} do",
      "  $0",
      "end"
    ]
  },
  "describe": {
    "prefix": [
      "des"
    ],
    "body": [
      "describe '$1' do",
      "  $0",
      "end"
    ]
  },
  "context": {
    "prefix": [
      "context"
    ],
    "body": [
      "context '$1' do",
      "  $0",
      "end"
    ]
  },
  "it": {
    "prefix": [
      "it"
    ],
    "body": [
      "it '$1' do",
      "  $0",
      "end"
    ]
  },
  "expect": {
    "prefix": [
      "exp"
    ],
    "body": [
      "expect($1).to "
    ]
  },
  "expect block": {
    "prefix": [
      "expd"
    ],
    "body": [
      "expect do",
      "  $1",
      "end.to $0",
    ]
  },
  "described_class": {
    "prefix": [
      "dc"
    ],
    "body": [
      "described_class"
    ]
  },
  "include MethodObject": {
    "prefix": [
      "imo"
    ],
    "body": [
      "include MethodObject$0"
    ]
  },
  "be_instance_of": {
    "prefix": [
      "bi",
      "be_instance_of"
    ],
    "body": [
      "be_instance_of "
    ]
  }
}
