[
  // Jump to tabs using Command + Tab number
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  // Prettify document with `Command + i`
  // `i` stands for indentation in my world :)
  {
    "key": "cmd+i",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
  },
  // By default this selects the next match of the selected word.
  // But I really need `Command + d` to mean "duplicate" as everywhere else in macOS.
  {
    "key": "cmd+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // So I nee to move the original "select next match" function somewhere else.
  {
    "key": "alt+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  // This is a hotkey for the extension `britesnow.vscode-toggle-quotes`
  {
    "key": "shift+cmd+2",
    "command": "editor.togglequotes"
  },
  // After changing `keybindings.json` or `settings.json` you can apply the changes
  // by pressing `Shift + Command + r` instead of restarting VSCode
  {
    "key": "ctrl+alt+cmd+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "alt+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "-cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "cursorWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "-cursorWordStartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "-cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorWordPartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "-cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+right",
    "command": "cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "cursorWordStartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "cursorWordEndRightSelect"
  },
  {
    "key": "ctrl+shift+left",
    "command": "cursorWordStartLeftSelect"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "cmd+r",
    "command": "testing.runCurrentFile",
    "when": "editorTextFocus && resourceFilename =~ /.*(test|spec)\\.\\w+$/"
  },
  {
    "key": "ctrl+cmd+r",
    "command": "testing.runAtCursor",
    "when": "editorTextFocus && resourceFilename =~ /.*(test|spec)\\.\\w+$/"
  }
]
