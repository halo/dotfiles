# Prompt
export PS1='\w\$ '

if [[ -s /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh ]]; then
  source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
  export PS1='\w\$$(__git_ps1) '
fi

# Paths
export PATH="~/.dotfiles/bin:$PATH"
export PATH="$PATH:/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources"
export PATH="$PATH:/usr/libexec/ApplicationFirewall"

# Override git-config "core.editor" to enforce vim when using SSH
if test -n "$SSH_CONNECTION"; then
  export GIT_EDITOR='vim'
fi

export EDITOR='mate'

# See https://github.com/Homebrew/brew/blob/master/share/doc/homebrew/Analytics.md
export HOMEBREW_NO_ANALYTICS=1

# Shell
alias reload='(source $HOME/.bash_profile && echo "sourced $HOME/.bash_profile") || echo "Could not source $HOME/.bash_profile"'
alias la='ls -lah'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Portable ls with colors
if ls --color -d . >/dev/null 2>&1; then
  alias ls='ls --color=auto'  # Linux
elif ls -G -d . >/dev/null 2>&1; then
  alias ls='ls -G'  # BSD/OS X
fi

# Ruby
alias be='bundle exec'

# Rails
alias r='rails'
alias tdev='tail -n 90 -f log/development.log'
alias ttest='tail -n 90 -f log/test.log'
alias g='be guard'
alias rst='touch tmp/restart.txt && echo touched tmp/restart.txt'

# Applications
function m {
  if [ -z "$1" ]
  then
    mate .
  else
    mate $1
  fi
}

function o {
  if [ -z "$1" ]
  then
    open .
  else
    open $1
  fi
}

function repeat {
  while sleep 2; do
    $@
  done
}

# System
alias hosts='sudo mate /etc/hosts'
alias sshconf='mate ~/.ssh/config'
alias keys="open ~/.ssh"
alias online="ping -c 1 www.example.com &> /dev/null && echo 'Online :)' || echo 'Offline :('"
alias gogo="~/.biosphere/spheres/halo/go/bin/go-google-authenticator"

function sshkey {
  if [ -z "$1" ]
  then
    echo "USAGE: sshkey mykeyname"
  else
    ssh-keygen -t rsa -N '' -f ~/.ssh/$1
    cat ~/.ssh/$1.pub | pbcopy
    echo
    echo "Generated key ~/.ssh/$1 and copied the public key to the clipboard."
    echo
  fi
}

function diffx {
  `/Applications/Xcode.app/Contents/Applications/FileMerge.app/Contents/MacOS/FileMerge -left $1 -right $2`
}

function defs {
  defa; sleep 2; defb
}

function defa {
  defaults read > /tmp/defaults_a
}

function defb {
  defaults read > /tmp/defaults_b
  diff /tmp/defaults_a /tmp/defaults_b
}

# Projects
alias p="cd ~/Projects"
alias pa="cd ~/Projects/auktion"
alias pm="cd ~/Projects/market"
alias pe="cd ~/Projects/express"

# Git
alias ga='git add --all'
alias gam="git commit --amend"
alias gb="git branch"
alias gc="git commit -v"
alias gco="git checkout"
alias gcp="git cherry-pick"
alias gd="git diff"  # What's changed but not yet added?
alias gdc="git diff --cached"  # What's added but not yet committed?
alias gdcm="git diff --cached | mate"
alias gdm="git diff | mate"
alias gg='git grep'
alias gl="git pull --rebase"
alias gm='git merge'
alias gp='git push'
alias gpp='git pull --rebase && git push'
alias gr='git remote show origin'
alias gs="git status"
alias gt='git tag'
alias gu='git unstage'

function gbo {
  git branch $1 && git checkout $1
}

if [[ -s /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash ]]; then
  source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash
fi

function guser {
  if [ -z "$1" ]
  then
  echo "Current git configuration:"
    git config --get user.name
    git config --get user.email
  else
    echo "New git configuration:"
    git config user.name $1
    git config user.email $2
    git config --get user.name
    git config --get user.email
  fi
}

function ghalo {
  guser halo $(echo "Z2l0aHViQHBvc3Rlby5vcmc=" | openssl enc -d -base64)
}

# Local bin directory takes highest precedence
export PATH="bin:$PATH"

### BIOSPHERE MANAGED START ###

# Adding the "bio" executable to your path. Just for your convenience.
export PATH="$HOME/.biosphere/core/bin:$PATH"

# Loading Biosphere shell additions (for clean and simple de-/activation of spheres).
# These lines won't change and are safe to be commited to your dotfiles if you wish.
[[ -s $HOME/.biosphere/augmentations/bash_profile ]] && source $HOME/.biosphere/augmentations/bash_profile

### BIOSPHERE MANAGED STOP ###
